% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RuleBasedNLP_JavaSentence.R
\name{RuleBasedNLP_JavaSentence}
\alias{RuleBasedNLP_JavaSentence}
\title{Interface to rules-based NLP (Java pipeline) to obtain sentence level predictions.}
\usage{
RuleBasedNLP_JavaSentence(segmented.reports, imageid = "imageid",
  bodyText = "body", impressionText = "impression",
  findings_longstring = paste(c("spondylolisthesis", "annular_fissure",
  "disc_bulge", "disc_degeneration", "disc_desiccation",
  "disc_height_loss", "disc_protrusion", "facet_degeneration"), collapse =
  ";"))
}
\arguments{
\item{segmented.reports}{The input data frame}

\item{imageid}{String of column that uniquely identifies each image}

\item{bodyText}{String of column that indexes body of report text}

\item{impressionText}{String of column that indexes impression section of report text}

\item{findings_longstring}{String of findings separated by ";"}
}
\value{
A "long" data frame with the columns
 Finding
 imageid: ID that indexes reports
 Sentence: Exact string of the sentence
 Section of sentence: Whether the sentence was in body or impression
 regex: 1 if there is a keyword in the sentence, otherwise 0
 negex: 1 if the keyword is negated, otherwise 0
 **NOTE**: regex cannot be 1 if regex = 0
 keyword: The keyword that triggered regex = 1
}
\description{
Interface to rules-based NLP (Java pipeline) to obtain sentence level predictions.
}
\examples{
RuleBasedNLP_JavaSentence(df, findings_longstring = "facet_degeneration;disc_degeneration")
}
\keyword{Java}
\keyword{load}
